#!/bin/bash

function error_quit {
    echo -e "$@"
    echo
    echo -e 'Usage:'
    echo -e './compile_script --clean'
    echo -e '   To clean build direcrtory. Makenek will ask for cleaning 3rd-party libraries.'
    echo
    echo -e './compile_script --all'
    echo -e '   To compile the code.'
    exit 1
}


# Add path to Catalyst installation.

export OSMESA=/u/yju/ADMIRE/InSituPackage/gcc12_omp4/software

export LIBDIR=$OSMESA/lib:$LIBDIR
export LD_LIBRARY_PATH=$OSMESA/lib:$LD_LIBRARY_PATH
export LD_RUN_PATH=$OSMESA/lib:$LD_RUN_PATH

export OSMESA_INCLUDE_DIR=$OSMESA/include
export OSMESA_LIBRARY=$OSMESA/lib

export PARAVIEW=/u/yju/ADMIRE/InSituPackage/gcc12_omp4/software
export PATH=$PARAVIEW/bin:$PATH
export LD_LIBRARY_PATH=$PARAVIEW/lib:$LD_LIBRARY_PATH

export PYTHONPATH=$PARAVIEW/lib/python3.9/site-packages:$PYTHONPATH
export PYTHONPATH=$PARAVIEW/lib/python3.9/site-packages/paraview/:$PYTHONPATH

#export ADIOS2_DIR=/u/yju/software_adios2.8.0/adios2.8.0_sst_NOcuda
#export PATH=$ADIOS2_DIR/bin:$PATH

export ADIOS2=0
#export ADIOS2_INCS=`adios2-config --cxx-flags`
#export ADIOS2_LIBS=`adios2-config --cxx-libs`

export CATALYST=1
#export CATALYST_LIBS+=" -L/u/yju/ADMIRE/InSituPackage/software/lib64/ -lvtkPVPythonCatalyst-pv5.9 "
export CATALYST_LIBS+=`paraview-config -l -c PythonCatalyst`
export CATALYST_INCS=`paraview-config -f -c PythonCatalyst`

# Nek5000 parameters at the end of Ftn compiler, add where to find the tools
export CASE="pipe"
export NEK_SOURCE_ROOT="/u/yju/ADMIRE/Nek5000_Catalyst"
# Add paths to the compression tool
export COMPRESS_SRC=$NEK_SOURCE_ROOT/TOOLS_iocompression
export COMPRESS_INC=" -I"${COMPRESS_SRC}

export FC=mpif90
export CC=mpicc
export CXX=mpicxx
export FFLAGS=""
export CFLAGS=""
export PPLIST=""
export USR="frame.o mntrlog_block.o mntrlog.o mntrtmr_block.o mntrtmr.o rprm_block.o rprm.o math_tools.o"
USR+=" io_tools_block.o io_tools.o chkpoint.o chkpt_mstp.o gSyEM.o map2D.o stat.o stat_IO.o io_trunc.o"
export USR_LFLAGS=""

# Compile the in-situ writer
#$CXX -o compressor ${COMPRESS_SRC}/ADIOS_compress.cpp $ADIOS2_FLAG

# Copy the config folder for the in-situ writer
#cp -r ${COMPRESS_SRC}/config .


# arguments
args=("$@")
argsnr=$#

# check arguments
# parameters number check
if [ $[argsnr] -ne 1 ]; then
    error_quit 'Wrong arguments number!'
fi

for il in "$@"
do
case $il in
        --clean)
		rm compressor
		rm -r config
		${NEK_SOURCE_ROOT}/bin/makenek clean
                shift
                ;;
        --all)
                ${NEK_SOURCE_ROOT}/bin/makenek ${CASE}
                shift
                ;;
        *) 
                error_quit 'Wrong argument.'
                ;;
esac
done
